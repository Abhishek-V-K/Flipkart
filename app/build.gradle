// /*
//  * This file was generated by the Gradle 'init' task.
//  *
//  * This generated file contains a sample Java application project to get you started.
//  * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
//  */

// plugins {
//     // Apply the application plugin to add support for building a CLI application in Java.
//     id 'application'
// }

// repositories {
//     // Use Maven Central for resolving dependencies.
//     mavenCentral()
// }

// dependencies {
//     // Use JUnit Jupiter for testing.
//     testImplementation libs.junit.jupiter

//     testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

//     // This dependency is used by the application.
//     implementation libs.guava
//     testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'

//     // https://mvnrepository.com/artifact/org.testng/testng
// testImplementation group: 'org.testng', name: 'testng', version: '7.10.2'

//      // Selenium WebDriver
//     implementation 'org.seleniumhq.selenium:selenium-java:4.27.0'
//     // WebDriverManager for automatic driver setup
//     implementation 'io.github.bonigarcia:webdrivermanager:5.9.2'

//     // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
// implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.9'

// // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
// testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.9'

// // https://mvnrepository.com/artifact/org.apache.poi/poi
// implementation group: 'org.apache.poi', name: 'poi', version: '5.4.0'
// // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
// implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.4.0'
// // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
// implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.24.3'
// // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
// implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.24.3'

// // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
// testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.11.4'
// // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
// testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.11.4'

// }

// // Apply a specific Java toolchain to ease working on different environments.
// java {
//     toolchain {
//         languageVersion = JavaLanguageVersion.of(21)
//     }
// }

// application {
//     // Define the main class for the application.
//     mainClass = 'automation.App'
// }

// tasks.named('test') {
//     // Use JUnit Platform for unit tests.
//     useJUnitPlatform()
// }
// test {
//     useTestNG()
//     testLogging {
//         events "passed", "skipped", "failed" // Log all events to the console
//         showStandardStreams = true // Ensure standard output (System.out.println) is shown
//     }
// }

plugins {
    id 'application'
    id 'io.qameta.allure' version '2.12.0'  // Add Allure plugin
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/qameta/maven' } // Allure plugin repository
}

dependencies {
    // Use TestNG for testing
    testImplementation 'org.testng:testng:7.10.2'

    // Selenium WebDriver for automation
    implementation 'org.seleniumhq.selenium:selenium-java:4.27.0'

    // WebDriverManager for automatic driver setup
    implementation 'io.github.bonigarcia:webdrivermanager:5.9.2'

    // Logging libraries
    implementation 'org.slf4j:slf4j-api:2.0.9'
    testImplementation 'org.slf4j:slf4j-simple:2.0.9'

    // Apache POI for working with Excel/Word files
    implementation 'org.apache.poi:poi:5.4.0'
    implementation 'org.apache.poi:poi-ooxml:5.4.0'

    // Log4j for logging
    implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.24.3'

    // Cucumber Java
    implementation group: 'io.cucumber', name: 'cucumber-java', version: '7.21.0'

    // Cucumber Testng
    implementation group: 'io.cucumber', name: 'cucumber-testng', version: '7.21.0'

    // Allure Testng
    implementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.29.1'

    // https://mvnrepository.com/artifact/io.qameta.allure/allure-java-commons
    implementation group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.29.1'

}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'automation.App'
}

// tasks.named('test') {
//     useTestNG() // Ensure TestNG is used
//     testLogging {
//         events "passed", "skipped", "failed" // Log all events to the console
//         showStandardStreams = true // Ensure standard output (System.out.println) is shown
//     }
//      finalizedBy allureReport // Run the allureReport task after tests
// }

tasks.withType(Test).configureEach {
    useTestNG()
    finalizedBy("allureReport")
}

allure {
    version = '2.12.0'  // specify the version you want
    autoconfigure = true  // Automatically configure the task for generating reports
}

// allure {
//     version = '2.29.0' // Use a stable version
//     autoconfigure = true
//     resultsDir = file("$buildDir/allure-results")
//     reportDir = file("$buildDir/allure-report")
// }

// // Generate Allure report after tests run
// task allureReport(type: AllureReport) {
//     dependsOn test  // Ensure tests are run before generating the report
//     destinationDir = file("$buildDir/allure-report")  // Output directory for the Allure report
// }

// task allureServe(type: AllureServe) {
//     dependsOn allureReport  // Serve the generated Allure report
//     destinationDir = file("$buildDir/allure-report")  // Serve the same directory
// }


